(()=>{"use strict";var e={inputSelector:"popup__input",buttonSubmitClass:"popup__btn-save",disableButtonClass:"popup__btn-save_disabled",inputErrorClass:"popup__input_type_error",activeErrorClass:"popup__input-error_visible",profileAvatarSelector:".profile__avatar",profileAboutSelector:".profile__about",profileNameSelector:".profile__name",popupEditProfileSelector:".popup_form_edit",popupAddcardTemplateSelector:".popup_form_add",popupViewerSelector:".popup_viewer",popupConfirmSelector:".popup_form_confirm",popupUpdateAvatarSelector:".popup_form_avatar"},t=document.querySelector(".profile"),r=t.querySelector(".profile__btn-edit"),n=t.querySelector(".profile__btn-add"),o="#card-template";function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==i(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===i(o)?o:String(o)),n)}var o}var u=function(){function e(t){var r=t.headers,n=t.baseUrl;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._headers=r,this._baseUrl=n}var t,r;return t=e,(r=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("".concat(e.status," ").concat(e.statusText))}},{key:"getUserInfo",value:function(){var e=this._baseUrl+"/users/me";return fetch(e,{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){var e=this._baseUrl+"/cards";return fetch(e,{headers:this._headers}).then(this._checkResponse)}},{key:"getServerData",value:function(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}},{key:"setUserInfo",value:function(e){var t=this._baseUrl+"/users/me";return fetch(t,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}},{key:"addNewCard",value:function(e){var t=this._baseUrl+"/cards";return fetch(t,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){var t=this._baseUrl+"/cards/".concat(e);return fetch(t,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addCardLike",value:function(e){var t=this._baseUrl+"/cards/likes/".concat(e);return fetch(t,{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteCardLike",value:function(e){var t=this._baseUrl+"/cards/likes/".concat(e);return fetch(t,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"setProfileAvatar",value:function(e){var t=this._baseUrl+"/users/me/avatar";return fetch(t,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==l(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==l(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===l(o)?o:String(o)),n)}var o}var s=function(){function e(t){var r=t.data,n=t.userId,o=t.cardTemplateSelector,i=t.handleCardClick,a=t.handleLikeButton,u=t.handleDeleteButton;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._currentUserId=n,this._dataOwnerId=r.owner._id,this._imageLink=r.link,this._imageName=r.name,this._name=r.name,this._likes=r.likes,this._cardId=r._id,this._cardTemplateSelector=o,this._handleCardClick=i,this._handleLikeButton=a,this._handleDeleteButton=u}var t,r;return t=e,(r=[{key:"_getTemplateElement",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._currentUserId===this._dataOwnerId&&this._cardElement.querySelector(".element__btn-trash").addEventListener("click",(function(t){e._handleDeleteButton(t)})),this._likeButton.addEventListener("click",(function(t){return e._handleLikeButton(t)})),this._cardsElementImage.addEventListener("click",(function(){return e._handleCardClick()}))}},{key:"generateCard",value:function(){return this._cardElement=this._getTemplateElement(),this._likeButton=this._cardElement.querySelector(".element__btn-like"),this._countLikeElement=this._cardElement.querySelector(".element__like-count"),this._cardsElementImage=this._cardElement.querySelector(".element__image"),this._currentUserId!==this._dataOwnerId&&this._cardElement.querySelector(".element__btn-trash").remove(),this._cardsElementImage.src=this._imageLink,this._cardsElementImage.alt=this._imageName,this._cardElement.querySelector(".element__caption").textContent=this._name,this._countLikeElement.textContent=this._likes.length,this._toggleLikeState(),this._setEventListeners(),this._cardElement}},{key:"_toggleLikeState",value:function(){this._checkUserLike()?this.setLike():this.unsetLike()}},{key:"setLike",value:function(){this._likeButton.classList.add("element__btn-like_active"),this.isLiked=!0}},{key:"unsetLike",value:function(){this._likeButton.classList.remove("element__btn-like_active"),this.isLiked=!1}},{key:"setLikesCounter",value:function(e){this._countLikeElement.textContent=e.length,this._checkUserLike()&&this.setLike()}},{key:"_checkUserLike",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._currentUserId}))}},{key:"getCardId",value:function(){return this._cardId}}])&&c(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==f(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===f(o)?o:String(o)),n)}var o}var y=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectors=t,this._formElement=r,this._inputList=Array.from(this._formElement.querySelectorAll(".".concat(this._selectors.inputSelector))),this._buttonElement=this._formElement.querySelector(".".concat(this._selectors.buttonSubmitClass))}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._selectors.activeErrorClass),e.classList.add(this._selectors.inputErrorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.classList.remove(this._selectors.activeErrorClass),t.textContent="",e.classList.remove(this._selectors.inputErrorClass)}},{key:"resetValidation",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._selectors.disableButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._selectors.disableButtonClass),this._buttonElement.disabled=!1)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}}])&&p(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function m(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==h(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==h(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===h(o)?o:String(o)),n)}var o}var d=function(){function e(t,r){var n=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=n,this._containerElement=document.querySelector(r)}var t,r;return t=e,(r=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addNewItem",value:function(e){this._containerElement.prepend(e)}},{key:"addOldItem",value:function(e){this._containerElement.append(e)}}])&&m(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function b(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==v(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==v(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===v(o)?o:String(o)),n)}var o}var _=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListener",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&e.close(),t.target.classList.contains("popup__btn-close")&&e.close()}))}}])&&b(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==g(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},k.apply(this,arguments)}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(n);if(o){var r=w(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._formElement=r._popup.querySelector(".popup__form"),r._formElementSubmitButton=r._formElement.querySelector(".popup__btn-save"),r._inputList=r._formElement.querySelectorAll(".popup__input"),r._handlerSubmitForm=t,r}return t=a,(r=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"getFormValues",value:function(){return this._getInputValues()}},{key:"getFormElement",value:function(){return this._formElement}},{key:"close",value:function(){this._formElement.reset(),k(w(a.prototype),"close",this).call(this)}},{key:"setEventListener",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){return e._handlerSubmitForm(t)})),k(w(a.prototype),"setEventListener",this).call(this)}},{key:"isLoadingMessage",value:function(e){this._formElementSubmitButton.textContent=!0===e?"Сохранение...":"Сохранить"}}])&&S(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(_);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function j(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,R(n.key),n)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},P.apply(this,arguments)}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function I(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}function U(e,t,r){return(t=R(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function R(e){var t=function(e,t){if("object"!==O(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===O(t)?t:String(t)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(n);if(o){var r=T(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return I(e)}(this,e)});function a(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return U(I(e=i.call.apply(i,[this].concat(r))),"_popupImage",e._popup.querySelector(".popup__image")),U(I(e),"_popupName",e._popup.querySelector(".popup__description")),e}return t=a,(r=[{key:"open",value:function(e,t){this._popupImage.src=e,this._popupImage.alt=t,this._popupName.textContent=t,P(T(a.prototype),"open",this).call(this)}}])&&j(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(_);function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function B(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==q(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===q(o)?o:String(o)),n)}var o}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},N.apply(this,arguments)}function D(e,t){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},D(e,t)}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&D(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(n);if(o){var r=V(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._formElement=t._popup.querySelector(".popup__form"),t}return t=a,(r=[{key:"setEventListener",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){return e._handlerSubmitForm(t)})),N(V(a.prototype),"setEventListener",this).call(this)}},{key:"changeHandlerSubmitForm",value:function(e){this._handlerSubmitForm=e}}])&&B(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(_);function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function M(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==F(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===F(o)?o:String(o)),n)}var o}var H=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileNameElement=document.querySelector(t.profileNameSelector),this._profileDescriptionElement=document.querySelector(t.profileAboutSelector),this._profileAvatarElement=document.querySelector(t.profileAvatarSelector)}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{userName:this._profileNameElement.textContent,userAbout:this._profileDescriptionElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.userName,r=e.userAbout;this._profileNameElement.textContent=t,this._profileDescriptionElement.textContent=r}},{key:"setUserAvatar",value:function(e){var t=e.userAvatarLink;this._profileAvatarElement.src=t}},{key:"saveUserId",value:function(e){this._userId=e}},{key:"getUserId",value:function(){return this._userId}}])&&M(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function J(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var z=new u({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-65",headers:{authorization:"a772ee3c-7f9f-4379-9fba-e4883f8faf6c","Content-Type":"application/json"}}),$=new H(e);z.getServerData().then((function(e){var t,r,n=(r=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],l=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(t,r)||function(e,t){if(e){if("string"==typeof e)return J(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?J(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],i=n[1];$.setUserInfo({userName:i.name,userAbout:i.about}),$.setUserAvatar({userAvatarLink:i.avatar}),G.renderItems(o),$.saveUserId(i._id)})).catch((function(e){console.error(e)}));var G=new d({renderer:function(e){var t=K(e,o);G.addOldItem(t)}},".elements__list");function K(e,t){var r=new s({data:e,cardTemplateSelector:t,userId:$.getUserId(),handleCardClick:function(){re.open(e.link,e.name)},handleLikeButton:function(){r.isLiked?z.deleteCardLike(r.getCardId()).then((function(e){r.unsetLike(),r.setLikesCounter(e.likes)})).catch((function(e){console.error(e)})):z.addCardLike(r.getCardId()).then((function(e){r.setLike(),r.setLikesCounter(e.likes)})).catch((function(e){console.error(e)}))},handleDeleteButton:function(e){var t=e.target.closest(".element"),n=r.getCardId();te.changeHandlerSubmitForm((function(e){e.preventDefault(),z.deleteCard(n).then((function(){t.remove(),te.close()})).catch((function(e){console.error(e)}))})),te.open()}});return r.generateCard()}var Q=new L(e.popupAddcardTemplateSelector,(function(e){e.preventDefault(),Q.isLoadingMessage(!0);var t=Q.getFormValues(),r={name:t.name,link:t.url};z.addNewCard(r).then((function(e){var t=K(e,o);G.addNewItem(t),Q.close()})).catch((function(e){console.error(e)})).finally((function(){Q.isLoadingMessage(!1)}))}));Q.setEventListener();var W=new y(e,Q.getFormElement());W.enableValidation(),n.addEventListener("click",(function(){W.resetValidation(),Q.open()}));var X=new L(e.popupUpdateAvatarSelector,(function(e){e.preventDefault(),X.isLoadingMessage(!0);var t=X.getFormValues();z.setProfileAvatar({avatar:t.url}).then((function(e){$.setUserAvatar({userAvatarLink:e.avatar}),X.close()})).catch((function(e){console.error(e)})).finally((function(){X.isLoadingMessage(!1)}))}));X.setEventListener();var Y=new y(e,X.getFormElement());Y.enableValidation(),document.querySelector(".profile__avatar-edit").addEventListener("click",(function(){Y.resetValidation(),X.open()}));var Z=new L(e.popupEditProfileSelector,(function(e){e.preventDefault(),Z.isLoadingMessage(!0);var t=Z.getFormValues();z.setUserInfo({name:t.title,about:t.subtitle}).then((function(e){$.setUserInfo({userName:e.name,userAbout:e.about}),Z.close()})).catch((function(e){console.error(e)})).finally((function(){Z.isLoadingMessage(!1)}))}));Z.setEventListener(),r.addEventListener("click",(function(){var e=$.getUserInfo(),t=Z.getFormElement();t.elements.name.value=e.userName,t.elements.description.value=e.userAbout,ee.resetValidation(),Z.open()}));var ee=new y(e,Z.getFormElement());ee.enableValidation();var te=new x(e.popupConfirmSelector);te.setEventListener();var re=new A(e.popupViewerSelector);re.setEventListener()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,